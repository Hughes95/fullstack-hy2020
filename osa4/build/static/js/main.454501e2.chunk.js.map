{"version":3,"sources":["components/Blog.js","services/blogs.js","services/login.js","components/Notification.js","components/LoginForm.js","components/Blogform.js","components/Togglable.js","App.js","index.js"],"names":["Blog","blog","name","painaa","lisaa_likes","ref","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","paddingTop","paddingLeft","border","borderWidth","marginBottom","title","author","content","id","onClick","className","url","likes","baseUrl","token","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","setToken","newToken","update","put","poista","delete","login","credentials","Notification","message","LoginForm","handleSubmit","handleUsernameChange","handlePasswordChange","username","password","onSubmit","value","onChange","type","Blogform","createBlog","setUsername","setPassword","setUser","setTitle","setAuthor","setUrl","event","preventDefault","target","Togglable","React","forwardRef","props","buttonLabel","children","kiinni","displayName","App","blogs","setBlogs","user","errorMessage","setErrorMessage","loginVisible","setLoginVisible","setLikes","noteFormRef","useRef","useEffect","blogService","loggedUserJSON","window","localStorage","getItem","JSON","parse","handleLogin","loginService","setItem","stringify","console","log","setTimeout","handleLogout","clear","logoutForm","loginForm","blogObject","current","returned","concat","catch","error","virhe","location","reload","map","find","n","confirm","poistaa","like","summa","changed","updateBlog","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.454501e2.chunk.js","sourcesContent":["import React, { useState, useImperativeHandle } from 'react'\nimport PropTypes from 'prop-types'\n\n\n\nconst Blog = ({ blog, name, painaa, lisaa_likes, ref }) => {\n  const [visible, setVisible] = useState(false)\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  const toggleVisibility2 = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    }\n  })\n  const blogStyle = {\n    paddingTop: 10,\n    paddingLeft: 2,\n    border: 'solid',\n    borderWidth: 1,\n    marginBottom: 5\n  }\n\n  return (\n    <div style={blogStyle}>\n      <div style={hideWhenVisible}>\n        {blog.title} {blog.author}\n        <span>{blog.content}</span>\n        <button id='view' onClick={toggleVisibility}>view</button>\n      </div>\n      <div style={showWhenVisible} className=\"togglableContent\">\n        {blog.title} {blog.author}<button id='hide' onClick={toggleVisibility2}>hide</button><br></br>\n        {blog.url}<br></br>\n        likes {blog.likes} <button id=\"likes\" onClick={lisaa_likes} >like</button><br></br>\n        {name}<br></br>\n        <button id='poista' onClick={painaa}>remove</button>\n      </div>\n    </div>\n  )}\n\nBlog.propTypes = {\n  blog: PropTypes.object.isRequired,\n  name: PropTypes.string.isRequired,\n  painaa: PropTypes.func.isRequired\n\n}\n\nexport default Blog\n","import axios from 'axios'\nconst baseUrl = '/api/blogs'\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst poista = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\n\nexport default { getAll, create, setToken, update, poista }","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\n\nexport default { login }","import React from 'react'\n\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nexport default Notification","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst LoginForm = ({\n  handleSubmit,\n  handleUsernameChange,\n  handlePasswordChange,\n  username,\n  password\n}) => {\n  return (\n    <div>\n      <h2>Login</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          username\n          <input\n            id='username'\n            value={username}\n            onChange={handleUsernameChange}\n          />\n        </div>\n        <div>\n          password\n          <input\n            id='password'\n            type=\"password\"\n            value={password}\n            onChange={handlePasswordChange}\n          />\n        </div>\n        <button id=\"login-button\" type=\"submit\">login</button>\n      </form>\n    </div>\n  )\n}\n\nLoginForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  handleUsernameChange: PropTypes.func.isRequired,\n  handlePasswordChange: PropTypes.func.isRequired,\n  username: PropTypes.string.isRequired,\n  password: PropTypes.string.isRequired\n}\n\nexport default LoginForm","import React, { useState } from 'react'\n\nconst Blogform = ({ createBlog }) => {\n  const [username, setUsername] = useState('') \n  const [password, setPassword] = useState('') \n  const [user, setUser] = useState(null)\n\n  const [title, setTitle] = useState('') \n  const [author, setAuthor] = useState('') \n  const [url, setUrl] = useState('') \n\n\n  const handle_title = (event) => {\n    setTitle(event.target.value)\n  }\n    \n  const handle_author = (event) => {\n    setAuthor(event.target.value)\n  }\n    \n  const handle_url = (event) => {\n    setUrl(event.target.value)\n  }\n\n  const addBlog = (event) => {\n    event.preventDefault()\n    createBlog({\n      title: title,\n      author: author,\n      url: url,\n    })\n\n    setUser(null)\n    setUsername('')\n    setPassword('')\n\n  }\n    \n  return (\n    <div className=\"formDiv\">\n      <form onSubmit={addBlog}>\n        <div>title<input value={title} onChange={handle_title} name=\"title\" id=\"title\"/></div>\n        <div>author<input value={author} onChange={handle_author} name=\"author\" id=\"author\"/></div>\n        <div>url<input value={url} onChange={handle_url} name=\"url\" id=\"url\"/></div>\n        <button id='create-button' type=\"submit\">create</button>\n      </form>\n    </div>\n  )          \n}\n\nexport default Blogform","import React, { useState, useImperativeHandle } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    }\n  })\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n      </div>\n      <div style={showWhenVisible} className=\"togglableContent\">\n        {props.children}\n        <button onClick={toggleVisibility}>{props.kiinni}</button>\n      </div>\n    </div>\n  )\n})\n\nTogglable.displayName = 'Togglable'\n\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired\n}\n\nexport default Togglable","import React, { useState, useEffect, useRef } from 'react'\nimport Blog from './components/Blog'\nimport blogService from './services/blogs'\nimport loginService from './services/login' \nimport Notification from './components/Notification'\nimport LoginForm from './components/LoginForm'\nimport Blogform from './components/Blogform'\nimport Togglable from './components/Togglable'\nimport './index.css'\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [username, setUsername] = useState('') \n  const [password, setPassword] = useState('') \n  const [user, setUser] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  const [title, setTitle] = useState('') \n  const [author, setAuthor] = useState('') \n  const [url, setUrl] = useState('') \n  const [loginVisible, setLoginVisible] = useState(false)\n  const [newlikes, setLikes] = useState(0) \n\n  const noteFormRef = useRef()\n\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs( blogs )\n    )  \n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  const addBlog = (blogObject) => {\n    noteFormRef.current.toggleVisibility()\n    blogService\n      .create(blogObject)\n      .then(setErrorMessage(\n        `a new blog '${title}' by ${author}` \n      ))\n      .then(setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)   )\n      .then(returned=> {\n        setUser(user.concat(returned))\n        setUsername('')\n        setPassword('')\n      })\n      .catch(error => {\n        var virhe = JSON.stringify(error.response.data.error);\n        setErrorMessage(virhe)\n        console.log(error.response.data.error)\n      })\n    window.location.reload()\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    \n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n\n      window.localStorage.setItem(\n        'loggedappUser', JSON.stringify(user)\n      ) \n\n      blogService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      setErrorMessage('wrong username or password')\n      console.log(errorMessage)\n\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleLogout = async (event) => {\n    setUsername('')\n    localStorage.clear()\n  }\n\n\n  const loginForm = () => {\n    const hideWhenVisible = { display: loginVisible ? 'none' : '' }\n    const showWhenVisible = { display: loginVisible ? '' : 'none' }\n\n    return (\n      <div>\n        <div style={hideWhenVisible}>\n          <button onClick={() => setLoginVisible(true)}>log in</button>\n        </div>\n        <div style={showWhenVisible}>\n          <LoginForm\n            username={username}\n            password={password}\n            handleUsernameChange={({ target }) => setUsername(target.value)}\n            handlePasswordChange={({ target }) => setPassword(target.value)}\n            handleSubmit={handleLogin}\n          />\n          <button onClick={() => setLoginVisible(false)}>cancel</button>\n        </div>\n      </div>\n    )\n  }\n\n\n\n\n  const logoutForm = (\n    <form onSubmit={handleLogout}>\n      <div>\n        <button type=\"submit\">logout</button>\n      </div>\n    </form>\n  )\n\n  if (user === null) {\n    return (\n      <div>\n        <Notification message={errorMessage} />\n        <h2>Log in to application</h2>\n        {user === null && loginForm()}\n      </div>\n    )\n  }\n\n  const poistaa = (id) => {\n    const blog = blogs.find(n => n.id === id)\n\n    if (window.confirm(\"Remove blog \" + blog.title + \" by \"+ blog.author)) {\n      blogService\n        .poista(id)\n        .then(setErrorMessage(\n          ` ${blog.title} is deleted`\n        ))\n        .then(setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)   )\n        .catch(error => {\n          setBlogs(null)\n        })\n      window.location.reload()\n    }\n  }\n  \n  const updateBlog = (id, like) => {\n    const blog = blogs.find(n => n.id === id)\n    setLikes(like)\n    var summa = like + 1\n    const changed = { ...blog, likes: summa}\n\n    blogService.update(id, changed)\n      .catch(error => {\n        setBlogs(null)})\n    window.location.reload()\n  }\n\n\n  return (\n    <div>\n      <h2>blogs</h2>\n      <p>{user.name} logged in</p>\n      {logoutForm}\n      <h2>create new</h2>\n      <Togglable buttonLabel=\"new blog\"  kiinni=\"cancel\" ref={noteFormRef}>\n        <Blogform createBlog={addBlog}\n          title={title}\n          author={author}\n          url={url}/>\n      </Togglable> \n      <p></p>\n      {blogs.map(blog => \n        <Blog key={blog.id} blog={blog} name={user.name}  painaa={() => poistaa(blog.id)} lisaa_likes={() => updateBlog(blog.id, blog.likes)}  />\n      )}\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}