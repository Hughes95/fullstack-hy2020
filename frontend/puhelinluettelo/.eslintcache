[{"/Users/hugheschaleehong/fullstack-hy2020/frontend/puhelinluettelo/src/index.js":"1","/Users/hugheschaleehong/fullstack-hy2020/frontend/puhelinluettelo/src/App.js":"2","/Users/hugheschaleehong/fullstack-hy2020/frontend/puhelinluettelo/src/osa2/PersonForm.js":"3","/Users/hugheschaleehong/fullstack-hy2020/frontend/puhelinluettelo/src/osa2/Filter.js":"4","/Users/hugheschaleehong/fullstack-hy2020/frontend/puhelinluettelo/src/services/persons.js":"5","/Users/hugheschaleehong/fullstack-hy2020/frontend/puhelinluettelo/src/components/Person.js":"6","/Users/hugheschaleehong/fullstack-hy2020/frontend/puhelinluettelo/src/components/Notification.js":"7","/Users/hugheschaleehong/fullstack-hy2020/frontend/puhelinluettelo/src/services/login.js":"8"},{"size":167,"mtime":1607879882724,"results":"9","hashOfConfig":"10"},{"size":6395,"mtime":1621436331519,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1607933363600,"results":"12","hashOfConfig":"10"},{"size":246,"mtime":1607933312766,"results":"13","hashOfConfig":"10"},{"size":779,"mtime":1621346180684,"results":"14","hashOfConfig":"10"},{"size":268,"mtime":1608278028147,"results":"15","hashOfConfig":"10"},{"size":233,"mtime":1609247829722,"results":"16","hashOfConfig":"10"},{"size":201,"mtime":1621345026001,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},"1jcqv1z",{"filePath":"22","messages":"23","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"21"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"21"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"21"},"/Users/hugheschaleehong/fullstack-hy2020/frontend/puhelinluettelo/src/index.js",["40"],"import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport axios from 'axios'\n\nReactDOM.render(<App />, document.getElementById('root'))",["41","42"],"/Users/hugheschaleehong/fullstack-hy2020/frontend/puhelinluettelo/src/App.js",["43","44","45","46","47","48"],"import React, { useState, useEffect } from 'react'\nimport Filter from './osa2/Filter'\nimport PersonForm from './osa2/PersonForm'\nimport personsService from './services/persons'\nimport Notification from './components/Notification'\nimport './index.css'\nimport Person from './components/Person'\nimport loginService from './services/login' \n\n\nconst App = () => {\n    const [ persons, setPersons] = useState([]) \n    const [ newName, setNewName ] = useState('')\n    const [ newNumber, setNewNumber ] = useState('')\n    const [ etsi, setNewetsi] = useState('')\n    const [showAll, setShowAll] = useState(true)\n    const [errorMessage, setErrorMessage] = useState(null)\n    const [username, setUsername] = useState('') \n    const [password, setPassword] = useState('') \n    const [user, setUser] = useState(null)\n\n\n      useEffect(() => {\n        personsService\n        .getAll()\n        .then(initialPersons => {\n          setPersons(initialPersons)\n        })\n      }, [])\n\n      useEffect(() => {\n        const loggedUserJSON = window.localStorage.getItem('loggedNoteappUser')\n        if (loggedUserJSON) {\n          const user = JSON.parse(loggedUserJSON)\n          setUser(user)\n          personsService.setToken(user.token)\n        }\n      }, [])\n      \n      const addName = (event) => {\n        event.preventDefault()\n        const personObject = {\n          name: newName,\n          number: newNumber,\n          id: persons.length + 1,\n        }\n\n        personsService\n        .create(personObject)\n        .then(setErrorMessage(\n          `Note '${newName}' added to phonebook`\n        ))\n        .then(setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)   )\n        .then(returned=> {\n        setPersons(persons.concat(returned))\n        setNewName('')\n        setNewNumber('')\n        })\n        .catch(error => {\n        var virhe = JSON.stringify(error.response.data.error);\n          setErrorMessage(virhe)\n\n          console.log(error.response.data.error)\n        })\n        window.location.reload()\n      }\n\n      const updateNumber = (id) => {\n        const url = `http://localhost:3001/persons/${id}`\n        const person = persons.find(n => n.id === id)\n        const changed = { ...person, number: newNumber }\n\n        if( window.confirm( person.name + \" is already added to phonebook, replace the old number with new one?\") ) {\n            personsService\n            .update(id, changed)\n            window.location.reload()\n            .then(setErrorMessage(\n              ` ${person.name} is updated`\n            ))\n            .then(setTimeout(() => {\n              setErrorMessage(null)\n            }, 2500)   )\n            .then(returned => {\n              setPersons(persons.map(p => person.id !== id ? p : returned))\n            })\n            .catch(error => {\n              setPersons(persons.filter(n => n.id !== id))\n              setErrorMessage(\n                `Information of ${person.name} has already been removed from server`\n              )\n              setTimeout(() => {\n                setErrorMessage(null)\n              }, 2500)   \n            })\n        }\n      }\n\n      const poistaa = (id) => {\n        const url = `http://localhost:3001/persons/${id}`\n        const person = persons.find(n => n.id === id)\n        const changedNote = { ...person, important: person.important }\n      \n        if (window.confirm(\"Delete \" + person.name + \" ?\")) {\n          personsService\n          .poista(id)\n          .then(setErrorMessage(\n            ` ${person.name} is deleted`\n          ))\n          .then(setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)   )\n          .then(returned => {\n            setPersons(persons.map(p => p.id !== id ? p : returned))\n          })\n          .catch(error => {\n            setPersons(persons.filter(n => n.id !== id))\n          })\n          window.location.reload()\n        }\n      }\n\n      const handleEtsi = (event1) => {\n        setNewetsi(event1.target.value)\n      }\n\n      const handlePerson = (event) => {\n        console.log(event.target.value)   \n        setNewName(event.target.value)\n      }\n\n      const handleNumber = (event) => {\n        console.log(event.target.value)   \n        setNewNumber(event.target.value)\n      }\n      \n    const personsToShow = showAll\n    ? persons\n    : persons.filter(person => person.name)\n\n    const paivittaa =  persons.find( ({name}) => name === newName  );\n\n    if(persons.map(kaikki => kaikki.name).includes(newName) === true && persons.map(kaikki => kaikki.id).includes(newName.id) === false ) {\n      console.log(paivittaa.id)\n      updateNumber(paivittaa.id)\n    }\n\n\n    const handleLogin = async (event) => {\n      event.preventDefault()\n      \n    try {\n        const user = await loginService.login({\n          username, password,\n        })\n\n        window.localStorage.setItem(\n          'loggedNoteappUser', JSON.stringify(user)\n        ) \n        personsService.setToken(user.token)\n        setUser(user)\n        setUsername('')\n        setPassword('')\n      } catch (exception) {\n        setErrorMessage('wrong credentials')\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      } \n      \n    }\n\n    const loginForm = () => (\n      <form onSubmit={handleLogin}>\n        <div>\n          username\n            <input\n            type=\"text\"\n            value={username}\n            name=\"Username\"\n            onChange={({ target }) => setUsername(target.value)}\n          />\n        </div>\n        <div>\n          password\n            <input\n            type=\"password\"\n            value={password}\n            name=\"Password\"\n            onChange={({ target }) => setPassword(target.value)}\n          />\n        </div>\n        <button type=\"submit\">login</button>\n      </form>      \n    )\n  \n\n   return (\n      <div>\n      <Notification message={errorMessage} />\n      <h2>Phonebook</h2>    \n        <Filter newName={etsi} handlePerson={handleEtsi}  />\n        <h3>Add a new</h3>\n        <PersonForm addName={addName} newName={newName} handlePerson={handlePerson} \n        newNumber={newNumber} handleNumber={handleNumber} />\n        <h2>Numbers</h2>\n          {personsToShow.filter(person => person.name.includes(etsi)).map((\n          (person, i) => <Person key={i} \n          person={person} \n          painaa={() => poistaa(person.id)}/> ))} \n          </div>\n    )\n  }\n\nexport default App ","/Users/hugheschaleehong/fullstack-hy2020/frontend/puhelinluettelo/src/osa2/PersonForm.js",[],"/Users/hugheschaleehong/fullstack-hy2020/frontend/puhelinluettelo/src/osa2/Filter.js",[],"/Users/hugheschaleehong/fullstack-hy2020/frontend/puhelinluettelo/src/services/persons.js",["49"],"import axios from 'axios'\nconst baseUrl = '/api/persons'\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n  }\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  \n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst poista = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, poista, setToken}\n","/Users/hugheschaleehong/fullstack-hy2020/frontend/puhelinluettelo/src/components/Person.js",[],"/Users/hugheschaleehong/fullstack-hy2020/frontend/puhelinluettelo/src/components/Notification.js",[],["50","51"],"/Users/hugheschaleehong/fullstack-hy2020/frontend/puhelinluettelo/src/services/login.js",["52"],"import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }",{"ruleId":"53","severity":1,"message":"54","line":4,"column":8,"nodeType":"55","messageId":"56","endLine":4,"endColumn":13},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"53","severity":1,"message":"61","line":16,"column":21,"nodeType":"55","messageId":"56","endLine":16,"endColumn":31},{"ruleId":"53","severity":1,"message":"62","line":20,"column":12,"nodeType":"55","messageId":"56","endLine":20,"endColumn":16},{"ruleId":"53","severity":1,"message":"63","line":71,"column":15,"nodeType":"55","messageId":"56","endLine":71,"endColumn":18},{"ruleId":"53","severity":1,"message":"63","line":101,"column":15,"nodeType":"55","messageId":"56","endLine":101,"endColumn":18},{"ruleId":"53","severity":1,"message":"64","line":103,"column":15,"nodeType":"55","messageId":"56","endLine":103,"endColumn":26},{"ruleId":"53","severity":1,"message":"65","line":174,"column":11,"nodeType":"55","messageId":"56","endLine":174,"endColumn":20},{"ruleId":"66","severity":1,"message":"67","line":33,"column":1,"nodeType":"68","endLine":33,"endColumn":59},{"ruleId":"57","replacedBy":"69"},{"ruleId":"59","replacedBy":"70"},{"ruleId":"66","severity":1,"message":"67","line":9,"column":1,"nodeType":"68","endLine":9,"endColumn":25},"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","no-native-reassign",["71"],"no-negated-in-lhs",["72"],"'setShowAll' is assigned a value but never used.","'user' is assigned a value but never used.","'url' is assigned a value but never used.","'changedNote' is assigned a value but never used.","'loginForm' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["71"],["72"],"no-global-assign","no-unsafe-negation"]