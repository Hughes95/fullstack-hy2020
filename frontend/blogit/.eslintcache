[{"/Users/hugheschaleehong/fullstack-hy2020/frontend/blogit/src/index.js":"1","/Users/hugheschaleehong/fullstack-hy2020/frontend/blogit/src/App.js":"2","/Users/hugheschaleehong/fullstack-hy2020/frontend/blogit/src/components/Notification.js":"3","/Users/hugheschaleehong/fullstack-hy2020/frontend/blogit/src/components/Blogform.js":"4","/Users/hugheschaleehong/fullstack-hy2020/frontend/blogit/src/components/Togglable.js":"5","/Users/hugheschaleehong/fullstack-hy2020/frontend/blogit/src/components/LoginForm.js":"6","/Users/hugheschaleehong/fullstack-hy2020/frontend/blogit/src/services/blogs.js":"7","/Users/hugheschaleehong/fullstack-hy2020/frontend/blogit/src/services/login.js":"8","/Users/hugheschaleehong/fullstack-hy2020/frontend/blogit/src/components/Blog.js":"9"},{"size":141,"mtime":1621348172204,"results":"10","hashOfConfig":"11"},{"size":4932,"mtime":1622106642337,"results":"12","hashOfConfig":"11"},{"size":214,"mtime":1621497430225,"results":"13","hashOfConfig":"11"},{"size":1264,"mtime":1621959825259,"results":"14","hashOfConfig":"11"},{"size":932,"mtime":1621495273086,"results":"15","hashOfConfig":"11"},{"size":1011,"mtime":1621958141565,"results":"16","hashOfConfig":"11"},{"size":774,"mtime":1621436436294,"results":"17","hashOfConfig":"11"},{"size":202,"mtime":1621352120753,"results":"18","hashOfConfig":"11"},{"size":1454,"mtime":1622108220675,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"cbria5",{"filePath":"23","messages":"24","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/hugheschaleehong/fullstack-hy2020/frontend/blogit/src/index.js",[],["43","44"],"/Users/hugheschaleehong/fullstack-hy2020/frontend/blogit/src/App.js",["45","46","47","48"],"import React, { useState, useEffect, useRef } from 'react'\nimport Blog from './components/Blog'\nimport blogService from './services/blogs'\nimport loginService from './services/login' \nimport Notification from './components/Notification'\nimport LoginForm from './components/LoginForm'\nimport Blogform from './components/Blogform'\nimport Togglable from './components/Togglable'\nimport './index.css'\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [username, setUsername] = useState('') \n  const [password, setPassword] = useState('') \n  const [user, setUser] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  const [title, setTitle] = useState('') \n  const [author, setAuthor] = useState('') \n  const [url, setUrl] = useState('') \n  const [loginVisible, setLoginVisible] = useState(false)\n  const [newlikes, setLikes] = useState(0) \n\n  const noteFormRef = useRef()\n\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs( blogs )\n    )  \n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  const addBlog = (blogObject) => {\n    noteFormRef.current.toggleVisibility()\n    blogService\n      .create(blogObject)\n      .then(setErrorMessage(\n        `a new blog '${title}' by ${author}` \n      ))\n      .then(setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)   )\n      .then(returned=> {\n        setUser(user.concat(returned))\n        setUsername('')\n        setPassword('')\n      })\n      .catch(error => {\n        var virhe = JSON.stringify(error.response.data.error);\n        setErrorMessage(virhe)\n        console.log(error.response.data.error)\n      })\n    window.location.reload()\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    \n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n\n      window.localStorage.setItem(\n        'loggedappUser', JSON.stringify(user)\n      ) \n\n      blogService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      setErrorMessage('wrong username or password')\n      console.log(errorMessage)\n\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleLogout = async (event) => {\n    setUsername('')\n    localStorage.clear()\n  }\n\n\n  const loginForm = () => {\n    const hideWhenVisible = { display: loginVisible ? 'none' : '' }\n    const showWhenVisible = { display: loginVisible ? '' : 'none' }\n\n    return (\n      <div>\n        <div style={hideWhenVisible}>\n          <button onClick={() => setLoginVisible(true)}>log in</button>\n        </div>\n        <div style={showWhenVisible}>\n          <LoginForm\n            username={username}\n            password={password}\n            handleUsernameChange={({ target }) => setUsername(target.value)}\n            handlePasswordChange={({ target }) => setPassword(target.value)}\n            handleSubmit={handleLogin}\n          />\n          <button onClick={() => setLoginVisible(false)}>cancel</button>\n        </div>\n      </div>\n    )\n  }\n\n\n\n\n  const logoutForm = (\n    <form onSubmit={handleLogout}>\n      <div>\n        <button type=\"submit\">logout</button>\n      </div>\n    </form>\n  )\n\n  if (user === null) {\n    return (\n      <div>\n        <Notification message={errorMessage} />\n        <h2>Log in to application</h2>\n        {user === null && loginForm()}\n      </div>\n    )\n  }\n\n  const poistaa = (id) => {\n    const blog = blogs.find(n => n.id === id)\n\n    if (window.confirm(\"Remove blog \" + blog.title + \" by \"+ blog.author)) {\n      blogService\n        .poista(id)\n        .then(setErrorMessage(\n          ` ${blog.title} is deleted`\n        ))\n        .then(setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)   )\n        .catch(error => {\n          setBlogs(null)\n        })\n      window.location.reload()\n    }\n  }\n  \n  const updateBlog = (id, like) => {\n    const blog = blogs.find(n => n.id === id)\n    setLikes(like)\n    var summa = like + 1\n    const changed = { ...blog, likes: summa}\n\n    blogService.update(id, changed)\n      .catch(error => {\n        setBlogs(null)})\n    window.location.reload()\n  }\n\n\n  return (\n    <div>\n      <h2>blogs</h2>\n      <p>{user.name} logged in</p>\n      {logoutForm}\n      <h2>create new</h2>\n      <Togglable buttonLabel=\"new blog\"  kiinni=\"cancel\" ref={noteFormRef}>\n        <Blogform createBlog={addBlog}\n          title={title}\n          author={author}\n          url={url}/>\n      </Togglable> \n      <p></p>\n      {blogs.map(blog => \n        <Blog key={blog.id} blog={blog} name={user.name}  painaa={() => poistaa(blog.id)} lisaa_likes={() => updateBlog(blog.id, blog.likes)}  />\n      )}\n    </div>\n  )\n}\n\nexport default App","/Users/hugheschaleehong/fullstack-hy2020/frontend/blogit/src/components/Notification.js",[],"/Users/hugheschaleehong/fullstack-hy2020/frontend/blogit/src/components/Blogform.js",["49","50","51"],"import React, { useState } from 'react'\n\nconst Blogform = ({ createBlog }) => {\n  const [username, setUsername] = useState('') \n  const [password, setPassword] = useState('') \n  const [user, setUser] = useState(null)\n\n  const [title, setTitle] = useState('') \n  const [author, setAuthor] = useState('') \n  const [url, setUrl] = useState('') \n\n\n  const handle_title = (event) => {\n    setTitle(event.target.value)\n  }\n    \n  const handle_author = (event) => {\n    setAuthor(event.target.value)\n  }\n    \n  const handle_url = (event) => {\n    setUrl(event.target.value)\n  }\n\n  const addBlog = (event) => {\n    event.preventDefault()\n    createBlog({\n      title: title,\n      author: author,\n      url: url,\n    })\n\n    setUser(null)\n    setUsername('')\n    setPassword('')\n\n  }\n    \n  return (\n    <div className=\"formDiv\">\n      <form onSubmit={addBlog}>\n        <div>title<input value={title} onChange={handle_title} name=\"title\" id=\"title\"/></div>\n        <div>author<input value={author} onChange={handle_author} name=\"author\" id=\"author\"/></div>\n        <div>url<input value={url} onChange={handle_url} name=\"url\" id=\"url\"/></div>\n        <button id='create-button' type=\"submit\">create</button>\n      </form>\n    </div>\n  )          \n}\n\nexport default Blogform","/Users/hugheschaleehong/fullstack-hy2020/frontend/blogit/src/components/Togglable.js",[],"/Users/hugheschaleehong/fullstack-hy2020/frontend/blogit/src/components/LoginForm.js",[],"/Users/hugheschaleehong/fullstack-hy2020/frontend/blogit/src/services/blogs.js",["52"],"import axios from 'axios'\nconst baseUrl = '/api/blogs'\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst poista = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\n\nexport default { getAll, create, setToken, update, poista }","/Users/hugheschaleehong/fullstack-hy2020/frontend/blogit/src/services/login.js",["53"],"import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\n\nexport default { login }","/Users/hugheschaleehong/fullstack-hy2020/frontend/blogit/src/components/Blog.js",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":18,"column":17,"nodeType":"60","messageId":"61","endLine":18,"endColumn":25},{"ruleId":"58","severity":1,"message":"62","line":19,"column":18,"nodeType":"60","messageId":"61","endLine":19,"endColumn":27},{"ruleId":"58","severity":1,"message":"63","line":20,"column":15,"nodeType":"60","messageId":"61","endLine":20,"endColumn":21},{"ruleId":"58","severity":1,"message":"64","line":22,"column":10,"nodeType":"60","messageId":"61","endLine":22,"endColumn":18},{"ruleId":"58","severity":1,"message":"65","line":4,"column":10,"nodeType":"60","messageId":"61","endLine":4,"endColumn":18},{"ruleId":"58","severity":1,"message":"66","line":5,"column":10,"nodeType":"60","messageId":"61","endLine":5,"endColumn":18},{"ruleId":"58","severity":1,"message":"67","line":6,"column":10,"nodeType":"60","messageId":"61","endLine":6,"endColumn":14},{"ruleId":"68","severity":1,"message":"69","line":34,"column":1,"nodeType":"70","endLine":34,"endColumn":60},{"ruleId":"68","severity":1,"message":"69","line":10,"column":1,"nodeType":"70","endLine":10,"endColumn":25},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'setTitle' is assigned a value but never used.","Identifier","unusedVar","'setAuthor' is assigned a value but never used.","'setUrl' is assigned a value but never used.","'newlikes' is assigned a value but never used.","'username' is assigned a value but never used.","'password' is assigned a value but never used.","'user' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]