{"version":3,"sources":["components/Blog.js","services/blogs.js","services/login.js","components/Notification.js","App.js","index.js"],"names":["Blog","blog","title","author","baseUrl","token","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","setToken","newToken","login","credentials","Notification","message","className","App","useState","blogs","setBlogs","username","setUsername","password","setPassword","user","setUser","errorMessage","setErrorMessage","setTitle","setAuthor","url","setUrl","useEffect","blogService","loggedUserJSON","window","localStorage","getItem","JSON","parse","addBlog","event","preventDefault","blogObject","setTimeout","returned","concat","catch","error","virhe","stringify","console","log","location","reload","handleLogin","loginService","setItem","handleLogout","clear","handle_title","target","value","handle_author","handle_url","logoutForm","onSubmit","type","name","onChange","map","id","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fddd640e.chunk.js","sourcesContent":["import React from 'react'\nconst Blog = ({blog}) => (\n  <div>\n    {blog.title} {blog.author}\n  </div>  \n)\n\nexport default Blog","import axios from 'axios'\nconst baseUrl = '/api/blogs'\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, setToken }","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\n\nexport default { login }","import React from 'react'\n\n\nconst Notification = ({ message }) => {\n    if (message === null) {\n      return null\n    }\n  \n    return (\n      <div className=\"error\">\n        {message}\n      </div>\n    )\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Blog from './components/Blog'\nimport blogService from './services/blogs'\nimport loginService from './services/login' \nimport Notification from './components/Notification'\nimport './index.css'\n\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [username, setUsername] = useState('') \n  const [password, setPassword] = useState('') \n  const [user, setUser] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  const [title, setTitle] = useState('') \n  const [author, setAuthor] = useState('') \n  const [url, setUrl] = useState('') \n\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs( blogs )\n    )  \n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  const addBlog = (event) => {\n    event.preventDefault()\n    const blogObject = {\n      title: title,\n      author: author,\n      url: url,\n    }\n\n    blogService\n    .create(blogObject)\n    .then(setErrorMessage(\n      `a new blog '${title}' by ${author}` \n    ))\n    .then(setTimeout(() => {\n      setErrorMessage(null)\n    }, 5000)   )\n    .then(returned=> {\n    setUser(user.concat(returned))\n    setUsername('')\n    setPassword('')\n    })\n    .catch(error => {\n    var virhe = JSON.stringify(error.response.data.error);\n      setErrorMessage(virhe)\n\n      console.log(error.response.data.error)\n    })\n    window.location.reload()\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    \n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n\n      window.localStorage.setItem(\n        'loggedappUser', JSON.stringify(user)\n      ) \n\n      blogService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      setErrorMessage('wrong username or password')\n      console.log(errorMessage)\n\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleLogout = async (event) => {\n    setUsername('')\n    localStorage.clear()\n  }\n\n  const handle_title = (event) => {\n    console.log(event.target.value)   \n    setTitle(event.target.value)\n  }\n\n  const handle_author = (event) => {\n    console.log(event.target.value)   \n    setAuthor(event.target.value)\n  }\n\n  const handle_url = (event) => {\n    console.log(event.target.value)   \n    setUrl(event.target.value)\n  }\n\n  const loginForm = () => (\n    <form onSubmit={handleLogin}>\n      <div>\n        username\n          <input\n          type=\"text\"\n          value={username}\n          name=\"Username\"\n          onChange={({ target }) => setUsername(target.value)}\n        />\n      </div>\n      <div>\n        password\n          <input\n          type=\"password\"\n          value={password}\n          name=\"Password\"\n          onChange={({ target }) => setPassword(target.value)}\n        />\n      </div>\n      <button type=\"submit\">login</button>\n    </form>      \n  )\n\n  const Create_New = () => (\n    <form onSubmit={addBlog}>\n      <div>title<input value={title} onChange={handle_title} name=\"title\" /></div>\n      <div>author<input value={author} onChange={handle_author} name=\"author\" /></div>\n      <div>url<input value={url} onChange={handle_url} name=\"url\" /></div>\n      <button type=\"submit\">create</button>\n    </form>      \n  )\n\n\n\n  const logoutForm = (\n    <form onSubmit={handleLogout}>\n    <div>\n    <button type=\"submit\">logout</button>\n    </div>\n    </form>\n  )\n\n  if (user === null) {\n    return (\n      <div>\n        <Notification message={errorMessage} />\n        <h2>Log in to application</h2>\n        {user === null && loginForm()}\n      </div>\n    )\n  }\n\n\n  return (\n    <div>\n      <h2>blogs</h2>\n      <p>{user.name} logged in</p>\n      {logoutForm}\n      <h2>create new</h2>\n      <div>{Create_New()}</div>\n      <p></p>\n      {blogs.map(blog =>\n        <Blog key={blog.id} blog={blog} />\n      )}\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}